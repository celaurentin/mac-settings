# Colorized prompt configuration.
# FORMAT : history # |         date and time     |  user   | directory
# EXAMPLE: [4293]       2016/07/26 11:30 Tuesday   kevin  in  ~

function __prompt_command() {
  local EXIT="$?" # Exit status determines history number color
  PS1=""

  # Display history number with color.
  # Green    Previous command succeeded.
  # Red      Previous command failed.
  if [ $EXIT -eq 0 ]; then
    PS1+="\[$solarized_green\][\!]\[$color_reset\] ";
  else
    PS1+="\[$solarized_red\][\!]\[$color_reset\] ";
  fi

	prompt_date=$(date '+%Y/%m/%d %H:%M %A')
	prompt_username="\u"
	prompt_directory="\w"

  PS1+="\[$solarized_yellow\]$prompt_date\[$color_reset\]  "
  PS1+="\[$solarized_magenta\]$prompt_username\[$color_reset\] "
  PS1+="\[$solarized_base\]in\[$color_reset\] "
  PS1+="\[$solarized_cyan\]$prompt_directory\[$color_reset\] "

  # Display git branch when in repo with helper message in appropriate color.
  local git_status="`git status -unormal 2>&1`"
  if ! [[ "$git_status" =~ Not\ a\ git\ repo ]]; then
    if [[ "$git_status" =~ Untracked\ files ]] \
          || [[ "$git_status" =~ Changes\ not\ staged ]]; then
      local git_color=$solarized_red
      local git_message="there's something to add"
    elif [[ "$git_status" =~ Changes\ to\ be\ committed ]]; then
      local git_color=$solarized_orange
      local git_message="there's something to commit"
    elif [[ "$git_status" =~ Your\ branch\ is\ ahead\ of ]]; then
      local git_color=$solarized_yellow
      local git_message="there's something to push"
    else
      local git_color=$solarized_green
      local git_message="everything is up-to-date"
    fi

    if [[ "$git_status" =~ On\ branch\ ([^[:space:]]+) ]]; then
        local git_branch=${BASH_REMATCH[1]}
    else # Detached HEAD
        local git_branch="(`git describe --all --contains --abbrev=4 HEAD 2> /dev/null || echo HEAD`)"
    fi

    PS1+="\[$solarized_base\]on\[$color_reset\] "
    PS1+="\[$solarized_orange\]$git_branch\[$color_reset\] "
    PS1+="\[$solarized_base\]where\[$color_reset\] "
    PS1+="\[$git_color\]$git_message\[$color_reset\]"
  fi

  PS1+="\n\[$solarized_cyan\]тед\[$color_reset\] "       # new line
}
PROMPT_COMMAND=__prompt_command

PS2="\[$solarized_cyan\]тед\[$color_reset\] "            # continued line after \
